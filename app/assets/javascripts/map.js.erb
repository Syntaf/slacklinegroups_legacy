mapboxgl.accessToken = 'pk.eyJ1Ijoic3ludGFmIiwiYSI6ImNqM2Z2bzZhbTAxZWwycW4wcmI5cjk4MW0ifQ.YOd5yuJfLARC2oOfqY-KoA'

var zoomThresh = 4.5;
var isPointZoom = false;
var clickEvent = null;

var createPopUp = function(f) {
return  "<div class=\"title-bar\">"                                         +
            "<p class=\"title\">"+f[0].properties.name+"</p>"              +
        "</div>"                                                            +
        "<div class=\"content\">"                                           +
            "<table>"                                                       +
                "<tr>"                                                      +
                    "<td class=\"label\">Page Type:</td>"                   +
                    "<td class=\"value\">"+f[0].properties.type+"</td>"     +
                "</tr>"                                                     +
                "<tr>"                                                      +
                    "<td class=\"label\">Member Count(Estimate)</td>"       +
                    "<td class=\"value\">"+f[0].properties.members+"</td>"  +
                "</tr>"                                                     +
            "</table>"                                                      +
            "<div class=\"no-img\">"                                        +
                "<p>Photos Coming Soon :)</p>"                              +
            "</div>"                                                        +
        "</div>"                                                            +
        "<a class=\"bottom left\" target=\"_blank\" "                       +
            "href=\""+f[0].properties.link+"\">Go to Group</a>"             +
        "<a class=\"bottom right\">See Something Wrong?</a>"
}

var getCords = function(f, offset=0) {
    var x = f[0].geometry.coordinates;
    x[1] += offset;
    return x;
}

var geoJSON = $.ajax({
    url: '/map/groups',
    dataType: 'json'
});

var geoPointJSON = $.ajax({
    url: '/map/pointclouds',
    dataType: 'json'
});

$(document).ready(function() {

    var availableTags = [
      "ActionScript",
      "AppleScript",
      "Asp",
      "BASIC",
      "C",
      "C++",
      "Clojure",
      "COBOL",
      "ColdFusion",
      "Erlang",
      "Fortran",
      "Groovy",
      "Haskell",
      "Java",
      "JavaScript",
      "Lisp",
      "Perl",
      "PHP",
      "Python",
      "Ruby",
      "Scala",
      "Scheme"
    ];

    $( "#search-field" ).autocomplete({
      source: function(request, response) {
            var results = $.ui.autocomplete.filter(availableTags, request.term);

            response(results.slice(0, 7));
        }
    });

    $(".button-collapse").sideNav({
        closeOnClick: true
    });
    $("a").click(function() {
        $("#sidenav-overlay").remove();
    });
    var map = new mapboxgl.Map({
        center: [0, 35],
        zoom: 1.75,
        container: 'map',
        style: 'mapbox://styles/syntaf/cj5pmkvmt11vb2so0k2foq0i9'
    });

    function unclusteredPointClicked(e)
    {
        console.log(e);
        clickEvent = e;
        // if (map.getZoom() < 7.7) {
        //     var lngLat = getCords(e.features);
        //     map.flyTo({
        //         center: {
        //             lng: lngLat[0],
        //             lat: lngLat[1]
        //         },
        //         zoom: 7.7
        //     });
        // } else {
            new mapboxgl.Popup()
                .setLngLat(getCords(clickEvent.features, 0))
                .setHTML(createPopUp(clickEvent.features))
                .addTo(map);
            clickEvent = null;
        //}
    }

    function unclusteredPointZoomend(e)
    {
        if (clickEvent)
        {
            console.log(clickEvent);
            new mapboxgl.Popup()
                .setLngLat(getCords(clickEvent.features, 0.04))
                .setHTML(createPopUp(clickEvent.features))
                .addTo(map);
            clickEvent = null;
        }
    }

    $(".zoom-out").click(function(){
        map.flyTo({
            center: {
                lng: 0,
                lat: 35
            },
            zoom: 1.75
        });
    });

    map.on('load', function () {
        geoPointJSON.done(function(data) {
            map.addSource('group-points', {
                type: 'geojson',
                data: {
                    type: 'FeatureCollection',
                    features: data
                },
                cluster: true,
                clusterMaxZoom: 14,
                clusterRadius: 35
            });

            map.addSource('ungrouped-points', {
                type: 'geojson',
                data: {
                    type: 'FeatureCollection',
                    features: data
                }
            });

            map.addLayer({
                id: 'group-clusters',
                type: 'circle',
                source: 'group-points',
                filter: ['has', 'point_count'],
                paint: {
                    'circle-color': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, "#51bbd6"],
                            [5, "#9A7197"],
                            [10, "#3DDC97"],
                            [25, "#f1f075"],
                            [50, "#f28cb1"],
                        ]
                    },
                    "circle-radius": {
                        property: "point_count",
                        type: "interval",
                        stops: [
                            [0, 20],
                            [5, 20],
                            [10, 30],
                            [25, 35],
                            [50, 40]
                        ]
                    }
                }
            });

            map.addLayer({
                id: "cluster-count",
                type: "symbol",
                source: 'group-points',
                filter: ["has", "point_count"],
                layout: {
                    "text-field": "{point_count_abbreviated}",
                    "text-font": ["DIN Offc Pro Medium", "Arial Unicode MS Bold"],
                    "text-size": 12
                }
            });

            map.addLayer({
                id: "unclustered-local-point",
                type: "symbol",
                source: 'group-points',
                filter: ["all", ["!has", "point_count"], ["==", "isRegional", false]],
                layout: {
                    'icon-image': 'slackgroup',
                    'icon-size': 1
                }
            });
            map.on('click', 'unclustered-local-point', unclusteredPointClicked);
            map.on('zoomend', 'unclustered-local-point', unclusteredPointZoomend);

            map.addLayer({
                id: "unclustered-regional-point",
                type: "symbol",
                source: 'group-points',
                filter: ["all", ["!has", "point_count"], ["==", "isRegional", true]],
                layout: {
                    'icon-image': 'regionalGroup',
                    'icon-size': 1
                }
            });
            map.on('click', 'unclustered-regional-point', unclusteredPointClicked);
            map.on('zoomend', 'unclustered-regional-point', unclusteredPointZoomend);

            map.on('click', 'group-clusters', function(e) {
                clickEvent = null;
                if(e.features[0].properties.point_count > 10) {
                    map.flyTo({
                        center: e.lngLat,
                        zoom: map.getZoom() + 1.75
                    });
                } else if(e.features[0].properties.point_count > 5) {
                    map.flyTo({
                        center: e.lngLat,
                        zoom: map.getZoom() + 2.0
                    });
                } else if(e.features[0].properties.point_count > 0) {
                    map.flyTo({
                        center: e.lngLat,
                        zoom: map.getZoom() + 3.0
                    });
                }
            });

            map.on('mouseenter', 'group-clusters', function () {
                map.getCanvas().style.cursor = 'pointer';
            });

            map.on('mouseleave', 'group-clusters', function () {
                map.getCanvas().style.cursor = '';
            });

            map.on('mouseenter', 'unclustered-local-point', function () {
                map.getCanvas().style.cursor = 'pointer';
            });

            map.on('mouseleave', 'unclustered-local-point', function () {
                map.getCanvas().style.cursor = '';
            });

        });
    });
});

